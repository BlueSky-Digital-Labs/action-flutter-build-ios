name: flutter-build-ios
description: Sets up the environment to build iOS apps with Flutter
branding:
  icon: box
  color: green

inputs:
  working-directory:
    description: The root directory of the Flutter app within this repository
    default: ./
  apple-id:
    description: "Your Apple ID (email)"
    required: true
  apple-id-password:
    description: "The app-specific password"
    required: true

runs:
  using: "composite"
  steps:

    - name: Set Up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: "stable"
        cache: true

    - name: Authenticate with Apple Developer Account
      id: authenticate
      env:
        APPLE_ID: ${{ inputs.apple-id }}
        APPLE_ID_PASSWORD: ${{ inputs.apple-id-password }}
      run: |
        echo "Authenticating with Apple Developer Account..."
        xcrun altool --list-providers -u "$APPLE_ID" -p "$APPLE_ID_PASSWORD"
      shell: bash

    - name: Download Provisioning Profiles
      if: steps.cache-profiles.outputs.cache-hit != 'true'
      env:
        APPLE_ID: ${{ inputs.apple-id }}
        APPLE_ID_PASSWORD: ${{ inputs.apple-id-password }}
      run: |
        echo "Downloading provisioning profiles..."
        security create-keychain -p "" ios-build.keychain
        security list-keychains -s ios-build.keychain
        security unlock-keychain -p "" ios-build.keychain
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      shell: bash

    - name: Build the Flutter App
      env:
        CI: true
      run: |
        echo "Building the Flutter app with automatic provisioning..."
        flutter build ipa --release \
          --export-options-plist=exportOptions.plist \
          -allowProvisioningUpdates
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Archive Build Artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: |
          ${{ inputs.working-directory }}/build/ios/ipa/
